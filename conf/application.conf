# This is the main configuration file for the application.
# ~~~~~

# The application languages (English and Welsh)
# If the browser does not have a preferred language set, then it will use the first language on this list
# ~~~~~
application.langs = "en,cy"

prototype.disclaimer = true

#application.context = "/vrm-retention"

start.page = ${?application.context}"/before-you-start"

# Logger
# ~~~~~

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

jvm.memory = "-Xms64m -Xmx512m -XX:MaxPermSize=512m"

# Protect cookies from XSS
session.httpOnly = true

# Session Cookie Max Age
application.session.maxAge=7d

application.crypto.aes.transformation = AES/CBC/PKCS5Padding

# Specify which address lookup service to use
addressLookupService.type = "ordnanceSurvey"

csrf.prevention = true

bruteForcePrevention.enabled = true

survey.url = "https://www.gov.uk/done/keep-registration-number"

retention.purchaseAmountInPence = 8000

# Test configs
# ~~~~~

# Should we be testing local play instance or remote instance
test.remote = false

# if remote instance, the url to use or dev
#test.url = "https://vehicles-online.preview-dvla.co.uk/"
test.url = "https://dev-vehicles-online.preview-dvla.co.uk/"
#test.url = "https://qa-vehicles-online.preview-dvla.co.uk/"
#test.url = "http://localhost:9000"


# The type of browser to use for tests
browser.type = htmlunit
#browser.type = chrome
#webdriver.chrome.driver = "drivers/chromedriver-2.9_macosx"
#webdriver.chrome.driver = "drivers/chromedriver-2.9_linux64"
#browser.type = firefox
#browser.type = ie
#browser.type = safari
#browser.type = phantomjs
#webdriver.phantomjs.binary = "drivers/phantomjs-1.9.7_macosx"
#webdriver.phantomjs.binary = "drivers/phantomjs-1.9.7_linux64"

# Specifies the amount of time in milliseconds the browser should wait when searching
# for an element if it is not immediately present.
browser.implicitlyWait = 5000

# 7am - 7pm
openingTimeMinOfDay = 420
closingTimeMinOfDay = 1140

# Amount of time before the service closes to tell the user the service is going to close
closingWarnPeriodMins = 15

# (optional) list of days the service is closed (days are represented as integers 1-7 => Monday-Sunday)
# closedDays = [7]

############# Health check satistics configuration #############
# Set the configuration in order to make the healthcheck return response code 500 when there are x consecutive
# failures per individual microservice.
# This statistic doesn't depend on any other. If there are x consecutive failures for any individual microservice
# the healthcheck endpoint will return http code 500.
healthStats.numberOfConsecutiveFailures = 10

# The next two properties define the request rate threshold used to determine which failure mechanism to use.
# Note that this is applicable on an individual micro service basis. So the failure mechanism used can vary
# from one micro service to the next.
# When the request rate is low we use absolute measurement (not relative to the total number of requests)
# of the failures in a time frame.
# When we have a high request rate we use the statistic that is relative to the total count.
# The deciding factor is whether the number of requests that have been made within the time frame is greater or smaller
# than the number configured here. If smaller we use absolute measurement. If bigger we use relative measurement.
healthStats.numberOfRequests = 20
healthStats.numberOfRequestsTimeFrame = 10 minutes

# The relative number of failed requests to the total number of requests for a time interval after which we should
# report an unhealthy application e.g. 30% for the last 10 minutes. So if the application has at least one micro service
# which is registering a 30% failure rate of its total number of calls in the time frame the application status
# will be reported as unhealthy.
# These settings will only be used if the request rate is above the one defined with healthStats.numberOfRequests
# and healthStats.numberOfRequestsTimeFrame
healthStats.failuresRatioPercent = 30
healthStats.failuresRatioPercentTimeFrame = 10 minutes

# The absolute number of requests for a time interval after which we should report an unhealthy application
# e.g. 1 failure per second.
# These settings will only be used if the request rate is below the one defined with healthStats.numberOfRequests
# and healthStats.numberOfRequestsTimeFrame
healthStats.numberOfFailures = 10
healthStats.numberOfFailuresTimeFrame = 10 minutes

# webchat Salesforce live agent properties
# If webchat.liveAgent.environmentId key is present it turns on the webchat functionality
webchat.liveAgent.environmentId = 5723E0000008OIo
webchat.liveAgent.buttonId = 5733E0000008OJ8
webchat.liveAgent.orgId = 00D3E000000CpSJ
webchat.liveAgent.url = "https://d.la1-c2cs-frf.salesforceliveagent.com/chat"
webchat.liveAgent.jsUrl = "https://c.la1-c2cs-frf.salesforceliveagent.com/content/g/js/36.0/deployment.js"

# Include file
include "vrm-retention-online.conf"
